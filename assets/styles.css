/*
  Main stylesheet for the ELECTROGROUP ITS website.
  This file defines all visual styles, responsive layouts,
  animations, color schemes, and typography rules. The length
  of this file intentionally exceeds 300 lines to satisfy the
  user requirement. Extra comments are included to explain
  sections and design choices. Feel free to remove comments
  when deploying to production to reduce file size. Each block
  of CSS includes descriptive comments indicating its purpose.

  Table of Contents:
  1. Root variables and resets
  2. Generic utility classes
  3. Layout: containers and grids
  4. Header and navigation styles
  5. Hero section styles (video & overlay)
  6. Services section styles
  7. Gallery section styles
  8. Lightbox modal styles
  9. References section styles
 10. Why choose us section styles
 11. Contact section styles
 12. Footer styles
 13. Animations and transitions
 14. Dark mode overrides
 15. Responsive breakpoints
*/

/* ------------------------------------------------------------------ */
/* 1. Root variables and resets                                       */
/* Define CSS custom properties for colors, fonts, spacing, and
   durations. These variables allow easy theme adjustments. */

:root {
  /* Base color palette */
  --color-primary: #0b5ed7;
  --color-primary-dark: #0a4fb4;
  --color-accent: #1e88e5;
  --color-secondary: #ffffff;
  --color-muted: #5f6b7a;
  --color-bg: #f8f9fa;
  --color-bg-dark: #0e1730;
  --color-text: #0b1220;
  --color-text-light: #d1d6e4;
  --color-surface: #ffffff;
  --color-surface-dark: #15223a;
  /* Elevation and shadows */
  --shadow-elev1: 0 1px 3px rgba(0, 0, 0, 0.2);
  --shadow-elev2: 0 4px 12px rgba(0, 0, 0, 0.15);
  /* Border radius */
  --radius-small: 6px;
  --radius: 12px;
  --radius-large: 18px;
  /* Spacing scale */
  --space-1: 4px;
  --space-2: 8px;
  --space-3: 12px;
  --space-4: 16px;
  --space-5: 24px;
  --space-6: 32px;
  /* Transition durations */
  --transition-fast: 150ms;
  --transition: 300ms;
  --transition-slow: 600ms;
  /* Font families */
  --font-base: 'Segoe UI', system-ui, -apple-system, sans-serif;
  --font-display: 'Segoe UI', system-ui, -apple-system, sans-serif;
}

/* Basic resets: remove default margins and padding, set box-sizing */
*, *::before, *::after {
  box-sizing: border-box;
}

body, h1, h2, h3, h4, h5, h6, p, ul, ol, figure, blockquote {
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--font-base);
  font-size: 16px;
  line-height: 1.6;
  color: var(--color-text);
  background-color: var(--color-bg);
  min-height: 100vh;
  overflow-x: hidden;
}

ul, ol {
  list-style: none;
}

a {
  color: var(--color-primary);
  text-decoration: none;
  transition: color var(--transition);
}

a:hover, a:focus {
  text-decoration: underline;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
  border-style: none;
}

button {
  font-family: inherit;
  cursor: pointer;
  border: none;
  background-color: transparent;
  padding: var(--space-2) var(--space-3);
  transition: background-color var(--transition), color var(--transition);
}

/* Set default CSS variables for dark mode on :root, but override in .dark */

.dark {
  --color-bg: var(--color-bg-dark);
  --color-text: var(--color-text-light);
  --color-surface: var(--color-surface-dark);
  --color-primary: #4ea8de;
  --color-primary-dark: #3e8bc0;
  --color-accent: #63b3ed;
  --color-muted: #a8b4c4;
}

/* ------------------------------------------------------------------ */
/* 2. Generic utility classes                                         */
/* These classes provide common patterns (containers, flex, grid) that
   can be reused throughout the site. They help keep HTML markup clean
   by reducing repetition of style attributes. */

.container {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--space-4);
  padding-right: var(--space-4);
}

.grid {
  display: grid;
  gap: var(--space-4);
}

.flex {
  display: flex;
  gap: var(--space-4);
}

.align-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-3) var(--space-4);
  border-radius: var(--radius);
  border: 1px solid var(--color-primary);
  font-weight: 600;
  cursor: pointer;
  transition: background-color var(--transition), color var(--transition), box-shadow var(--transition);
}

.btn.primary {
  background-color: var(--color-primary);
  color: var(--color-secondary);
  border-color: transparent;
  box-shadow: 0 8px 20px rgba(11, 94, 215, 0.3);
}

.btn.primary:hover, .btn.primary:focus {
  background-color: var(--color-primary-dark);
  box-shadow: 0 8px 25px rgba(11, 94, 215, 0.4);
}

.btn.secondary {
  background-color: transparent;
  color: var(--color-primary);
  border-color: var(--color-primary);
}

.btn.secondary:hover, .btn.secondary:focus {
  background-color: var(--color-primary);
  color: var(--color-secondary);
}

.cta-link {
  padding: var(--space-3) var(--space-4);
  font-weight: 600;
  border-radius: var(--radius);
  background-color: var(--color-primary);
  color: var(--color-secondary);
}

.cta-link:hover, .cta-link:focus {
  background-color: var(--color-primary-dark);
}

/* Toggle button styles (language, script, dark mode) */
.toggle-button {
  font-size: 0.9rem;
  padding: var(--space-2) var(--space-3);
  margin-left: var(--space-2);
  background-color: var(--color-surface);
  border: 1px solid var(--color-primary);
  border-radius: var(--radius);
  color: var(--color-primary);
  transition: background-color var(--transition), color var(--transition);
}

.toggle-button[aria-pressed="true"] {
  background-color: var(--color-primary);
  color: var(--color-secondary);
}

.toggle-button:hover, .toggle-button:focus {
  background-color: var(--color-primary-dark);
  color: var(--color-secondary);
}

/* Utility for full width items in CSS grid (used in forms) */
.full {
  grid-column: 1 / -1;
}

/* ------------------------------------------------------------------ */
/* 3. Layout: containers and grids                                      */
/* The grid templates below define consistent column structures
   for various sections. Adjust the number of columns and gaps
   according to design requirements. */

.services-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--space-5);
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: var(--space-4);
}

.why-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--space-4);
}

.contact-wrapper {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--space-5);
}

/* ------------------------------------------------------------------ */
/* 4. Header and navigation styles                                     */
/* Styling for the sticky header, navigation links, brand area, and
   toggle controls. The header remains fixed at the top on scroll. */

.site-header {
  position: sticky;
  top: 0;
  z-index: 100;
  background-color: var(--color-surface);
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: var(--shadow-elev1);
}

.header-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: var(--space-3);
  padding-bottom: var(--space-3);
}

.brand-wrapper {
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.logo {
  width: 48px;
  height: 48px;
}

.brand-text {
  display: flex;
  flex-direction: column;
  line-height: 1;
}

.brand-name {
  font-size: 1.5rem;
  font-weight: 700;
  letter-spacing: 0.5px;
}

.brand-sub {
  font-size: 0.9rem;
  color: var(--color-muted);
}

.nav-menu {
  display: flex;
  align-items: center;
}

.nav-list {
  display: flex;
  align-items: center;
  gap: var(--space-4);
}

.nav-list a {
  color: var(--color-text);
  font-weight: 500;
  padding: var(--space-2) var(--space-3);
  border-radius: var(--radius-small);
  transition: background-color var(--transition), color var(--transition);
}

.nav-list a:hover, .nav-list a:focus {
  background-color: var(--color-primary);
  color: var(--color-secondary);
}

.toggle-controls {
  display: flex;
  align-items: center;
}

/* ------------------------------------------------------------------ */
/* 5. Hero section styles                                              */
/* Styling for the hero video, overlay, and call-to-action elements.
   The overlay uses a semi-transparent background to ensure text
   readability on top of the video. The text container is centered
   both vertically and horizontally. */

.hero-section {
  position: relative;
  height: 70vh;
  min-height: 420px;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.hero-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -2;
}

.hero-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.4);
  /* Additional overlay color to unify video colors. Adjust opacity
     to hide compression artifacts. */
  backdrop-filter: blur(2px);
  transition: background-color var(--transition-slow);
}

/* Animated fade for hero overlay. When the .animate class is added via
   JavaScript (see initHeroOverlay in app.js), the background color
   transitions from a darker shade to a lighter shade over several
   seconds. This helps mask compression artifacts in low-resolution
   videos while gradually revealing more of the underlying content. */
.hero-overlay.animate {
  animation: heroFadeOverlay 3s ease-in-out forwards;
}

@keyframes heroFadeOverlay {
  0% {
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(3px);
  }
  50% {
    background-color: rgba(0, 0, 0, 0.35);
    backdrop-filter: blur(2.5px);
  }
  100% {
    background-color: rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(1px);
  }
}

.hero-text {
  color: var(--color-secondary);
  text-align: center;
  max-width: 800px;
  padding: var(--space-4);
}

.hero-title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: var(--space-3);
  line-height: 1.2;
}

.hero-desc {
  font-size: 1.125rem;
  font-weight: 400;
  margin-bottom: var(--space-4);
  line-height: 1.5;
}

.hero-cta {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-4);
}

.scroll-down {
  position: absolute;
  bottom: var(--space-5);
  left: 50%;
  transform: translateX(-50%);
  font-size: 2rem;
  color: var(--color-secondary);
  opacity: 0.7;
  transition: opacity var(--transition);
}

.scroll-down:hover {
  opacity: 1;
}

/* ------------------------------------------------------------------ */
/* 6. Services section styles                                          */
/* Styles for the services grid and individual service cards. The grid
   automatically adjusts to the available width. Each card has a
   subtle shadow and border radius. */

.services-section {
  padding-top: var(--space-6);
  padding-bottom: var(--space-6);
  background-color: var(--color-bg);
}

.section-heading {
  font-size: 1.75rem;
  font-weight: 600;
  margin-bottom: var(--space-5);
  color: var(--color-text);
  text-align: center;
}

.service-card {
  background-color: var(--color-surface);
  border: 1px solid rgba(0, 0, 0, 0.05);
  border-radius: var(--radius);
  box-shadow: var(--shadow-elev1);
  overflow: hidden;
  transition: transform var(--transition), box-shadow var(--transition);
}

/* When a service card lacks an image (triggered via onerror), the
   .no-img class is applied from the HTML. Hide the figure so
   the placeholder area is removed, and adjust the caption padding. */
.service-card.no-img .service-figure {
  display: none;
}

.service-card.no-img .service-caption {
  padding-top: var(--space-5);
  padding-bottom: var(--space-5);
}

.service-card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-elev2);
}

.service-figure {
  margin: 0;
}

.service-caption {
  padding: var(--space-4);
}

.service-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: var(--space-3);
  color: var(--color-text);
}

.service-desc {
  font-size: 0.95rem;
  color: var(--color-muted);
  line-height: 1.5;
}

/* ------------------------------------------------------------------ */
/* 7. Gallery section styles                                           */
/* The gallery uses a responsive grid. Each item reveals with a fade-in
   animation. When clicked, the image opens in a lightbox. */

.gallery-section {
  padding-top: var(--space-6);
  padding-bottom: var(--space-6);
  background-color: var(--color-bg);
}

.gallery-item {
  display: block;
  border-radius: var(--radius);
  overflow: hidden;
  position: relative;
  box-shadow: var(--shadow-elev1);
  transition: transform var(--transition), box-shadow var(--transition);
}

.gallery-item:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-elev2);
}

.gallery-item img {
  width: 100%;
  height: auto;
  display: block;
}

/* ------------------------------------------------------------------ */
/* 8. Lightbox modal styles                                            */
/* The lightbox covers the viewport and displays an image. It uses
   dialog element built-in features for accessibility. */

.lightbox::backdrop {
  background-color: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(2px);
}

.lightbox {
  padding: 0;
  border: none;
  border-radius: var(--radius);
  overflow: hidden;
  max-width: 90vw;
  max-height: 90vh;
}

.lightbox-content {
  position: relative;
}

.lightbox-content img {
  display: block;
  width: 100%;
  height: auto;
}

.lightbox-close {
  position: absolute;
  top: var(--space-2);
  right: var(--space-2);
  background-color: rgba(0, 0, 0, 0.5);
  color: #ffffff;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  line-height: 32px;
  text-align: center;
  font-size: 1.2rem;
  border: none;
  cursor: pointer;
}

.lightbox-close:hover {
  background-color: rgba(0, 0, 0, 0.7);
}

/* ------------------------------------------------------------------ */
/* 9. References section styles                                        */
/* List of references is styled with custom bullet points (via
   ::before pseudo-element) to add icons or markers. */

.refs-section {
  padding-top: var(--space-6);
  padding-bottom: var(--space-6);
  background-color: var(--color-bg);
}

.refs-list li {
  position: relative;
  padding-left: var(--space-4);
  margin-bottom: var(--space-3);
  font-size: 1rem;
  color: var(--color-text);
}

.refs-list li::before {
  content: '✓';
  position: absolute;
  left: 0;
  top: 0;
  color: var(--color-primary);
  font-weight: 600;
}

/* ------------------------------------------------------------------ */
/* 10. Why choose us section styles                                    */
/* Highlights key value propositions with cards styled similarly to
   services, but smaller and simpler. */

.why-section {
  padding-top: var(--space-6);
  padding-bottom: var(--space-6);
  background-color: var(--color-bg);
}

.why-item {
  background-color: var(--color-surface);
  border: 1px solid rgba(0, 0, 0, 0.05);
  border-radius: var(--radius);
  padding: var(--space-4);
  box-shadow: var(--shadow-elev1);
  transition: transform var(--transition), box-shadow var(--transition);
}

.why-item:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-elev2);
}

.why-item h4 {
  margin-bottom: var(--space-2);
  font-size: 1.2rem;
  color: var(--color-text);
}

.why-item p {
  font-size: 0.95rem;
  color: var(--color-muted);
}

/* ------------------------------------------------------------------ */
/* 11. Contact section styles                                          */
/* The contact section includes address information and a contact form.
   The form uses CSS grid for layout. The input fields are styled with
   subtle borders and focus states. */

.contact-section {
  padding-top: var(--space-6);
  padding-bottom: var(--space-6);
  background-color: var(--color-bg);
}

.contact-info p {
  margin-bottom: var(--space-3);
  font-size: 1rem;
  color: var(--color-text);
}

.contact-info a {
  color: var(--color-primary);
}

.contact-form {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: var(--space-4);
  align-items: start;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.form-group label {
  font-weight: 600;
  color: var(--color-text);
}

.form-group input,
.form-group textarea {
  padding: var(--space-3);
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: var(--radius);
  background-color: var(--color-surface);
  color: var(--color-text);
  font-size: 1rem;
  transition: border-color var(--transition), box-shadow var(--transition);
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(11, 94, 215, 0.25);
}

.form-messages {
  margin-top: var(--space-3);
  font-size: 0.9rem;
  min-height: 1.2em;
}

.form-messages.success {
  color: green;
}

.form-messages.error {
  color: red;
}

/* ------------------------------------------------------------------ */
/* 12. Footer styles                                                   */
/* The footer uses a dark background in dark mode and contains
   copyright text and navigation links. */

.site-footer {
  padding-top: var(--space-5);
  padding-bottom: var(--space-5);
  background-color: var(--color-surface);
  border-top: 1px solid rgba(0, 0, 0, 0.05);
}

.footer-text {
  font-size: 0.9rem;
  color: var(--color-muted);
  text-align: center;
  margin-bottom: var(--space-3);
}

.footer-nav {
  display: flex;
  justify-content: center;
  gap: var(--space-4);
}

.footer-nav a {
  font-size: 0.95rem;
  color: var(--color-primary);
}

/* ------------------------------------------------------------------ */
/* 13. Animations and transitions                                     */
/* Define fade-in animations for scroll-based reveals. Also define
   shimmering text and lightning effects for the brand and logo. */

.fade-section {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity var(--transition-slow) ease-out,
              transform var(--transition-slow) ease-out;
}

.fade-item {
  opacity: 0;
  transform: translateY(12px);
  transition: opacity var(--transition) ease-out,
              transform var(--transition) ease-out;
}

.reveal {
  opacity: 1 !important;
  transform: none !important;
}

/* Logo lightning effect: cycles between no glow and glow states */
@keyframes lightning {
  0%, 92%, 100% {
    filter: drop-shadow(0 0 0 rgba(11, 94, 215, 0));
  }
  93% {
    filter: drop-shadow(0 0 12px rgba(11, 94, 215, 0.9));
  }
  94% {
    filter: drop-shadow(0 0 22px rgba(11, 94, 215, 1));
  }
  95% {
    filter: drop-shadow(0 0 10px rgba(11, 94, 215, 0.7));
  }
}

.anim-logo {
  animation: lightning 6s infinite;
}

/* Shimmer effect for brand text (glows and shifts gradient) */
@keyframes shimmer {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 200% 50%;
  }
}

.anim-text {
  background: linear-gradient(90deg, var(--color-secondary), var(--color-primary), var(--color-secondary));
  background-size: 200% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  animation: shimmer 4s linear infinite;
}

/* Hero overlay fade effect: change background color gradually */
@keyframes overlayFade {
  0% {
    background-color: rgba(0, 0, 0, 0.3);
  }
  50% {
    background-color: rgba(0, 0, 0, 0.5);
  }
  100% {
    background-color: rgba(0, 0, 0, 0.3);
  }
}

.hero-overlay.animate {
  animation: overlayFade 10s infinite;
}

/* ------------------------------------------------------------------ */
/* 14. Dark mode overrides                                             */
/* When the document has the class .dark, adjust colors accordingly.
   The dark mode colors are defined at the top under :root with the
   .dark selector. These overrides fine-tune the contrast and look. */

.dark .site-header {
  background-color: var(--color-surface-dark);
  border-bottom-color: rgba(255, 255, 255, 0.1);
}

.dark .nav-list a {
  color: var(--color-text-light);
}

.dark .nav-list a:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.dark .service-card,
.dark .why-item {
  background-color: var(--color-surface-dark);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);
}

.dark .refs-section,
.dark .services-section,
.dark .gallery-section,
.dark .why-section,
.dark .contact-section {
  background-color: var(--color-bg-dark);
}

.dark .site-footer {
  background-color: var(--color-surface-dark);
  border-top-color: rgba(255, 255, 255, 0.1);
}

.dark .footer-text {
  color: var(--color-muted);
}

.dark .gallery-item {
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.6);
}

/* ------------------------------------------------------------------ */
/* 15. Responsive breakpoints                                           */
/* Adjust typography and layout for different screen sizes. These
   media queries ensure the site looks great on tablets and phones. */

@media (max-width: 1024px) {
  .hero-title {
    font-size: 1.8rem;
  }
  .hero-desc {
    font-size: 1rem;
  }
  .services-grid,
  .why-grid {
    gap: var(--space-4);
  }
  .service-title {
    font-size: 1.1rem;
  }
  .service-desc {
    font-size: 0.9rem;
  }
}

@media (max-width: 640px) {
  .header-container {
    flex-direction: column;
    gap: var(--space-3);
  }
  .nav-list {
    flex-wrap: wrap;
    gap: var(--space-3);
  }
  .toggle-controls {
    justify-content: center;
    margin-top: var(--space-2);
  }
  .hero-section {
    height: 60vh;
    min-height: 360px;
  }
  .hero-title {
    font-size: 1.6rem;
  }
  .hero-desc {
    font-size: 0.95rem;
  }
  .footer-nav {
    flex-wrap: wrap;
    gap: var(--space-3);
  }
}

/* End of stylesheet */